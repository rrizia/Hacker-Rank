/*
Given two strings (they can be of same or different length) help her in finding out the minimum number of character deletions required to make two strings anagrams. Any characters can be deleted from any of the strings.

Input Format 
Two lines each containing a string.

Constraints 
1 <= Length of A,B <= 10000 
A and B will only consist of lowercase latin letter.

Output Format 
A single integer which is the number of character deletions.

Sample Input #00:

cde
abc
Sample Output #00:

4
*/
```java
import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    public static void main(String[] args) {
        String[] inputs = readInput();
        System.out.println(makeAnagramChars(inputs));
    }
    public static int makeAnagramChars(String[] inputs){
        if(inputs == null || inputs.length < 2) return -1;
        if(inputs[0].equals(inputs[1])) return 0;
        
        int[] map = new int[26];
        for(int i = 0; i<inputs[0].length(); i++){
            int index = (int)(inputs[0].charAt(i)-'a');
            map[index]++;
        }
        
        int count = 0;
        for(int i = 0; i<inputs[1].length(); i++){
            int index = (int)(inputs[1].charAt(i)-'a');
            if(map[index] > 0){
                map[index]--;
                count++;
            }
        }
        int diff = (inputs[0].length()-count)+(inputs[1].length()-count);
        return diff;
    }
    public static String[] readInput(){
        Scanner kb = new Scanner(System.in);
        String[] inputs = new String[2];
        inputs[0] = kb.nextLine();
        inputs[1] = kb.nextLine();
        return inputs;
    }
}
```
